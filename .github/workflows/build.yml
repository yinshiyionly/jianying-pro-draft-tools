name: 构建多平台应用程序

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: 设置Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      
      - name: 构建Windows可执行文件
        run: |
          pyinstaller --name "草稿箱管理系统" --windowed --icon=resources/icons/draft.ico --add-data "resources;resources" --hidden-import PyQt6.QtSvg --hidden-import PyQt6.QtXml main.py
      
      - name: 打包Windows应用
        run: |
          cd dist
          powershell Compress-Archive -Path "草稿箱管理系统" -DestinationPath "草稿箱管理系统-Windows.zip"
      
      - name: 上传Windows构建产物
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: dist/草稿箱管理系统-Windows.zip
  
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: 设置Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      
      - name: 构建macOS应用
        run: |
          pyinstaller --name "草稿箱管理系统" --windowed --icon=resources/icons/draft.icns --add-data "resources:resources" --hidden-import PyQt6.QtSvg --hidden-import PyQt6.QtXml main.py
      
      - name: 创建DMG（可选）
        run: |
          # 如果需要创建DMG，取消下面的注释并安装所需工具
          # brew install create-dmg
          # create-dmg --volname "草稿箱管理系统" --volicon "resources/icons/draft.icns" --window-pos 200 120 --window-size 800 400 --icon-size 100 --icon "草稿箱管理系统.app" 200 190 --hide-extension "草稿箱管理系统.app" --app-drop-link 600 185 "草稿箱管理系统.dmg" "dist/草稿箱管理系统/"
          cd dist
          zip -r "草稿箱管理系统-macOS.zip" "草稿箱管理系统"
      
      - name: 上传macOS构建产物
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: dist/草稿箱管理系统-macOS.zip
  
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: 设置Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-dev libxcb-xinerama0 libxcb-cursor0
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      
      - name: 构建Linux应用
        run: |
          pyinstaller --name "草稿箱管理系统" --windowed --add-data "resources:resources" --hidden-import PyQt6.QtSvg --hidden-import PyQt6.QtXml main.py
      
      - name: 打包Linux应用
        run: |
          cd dist
          tar -czvf "草稿箱管理系统-Linux.tar.gz" "草稿箱管理系统"
      
      - name: 上传Linux构建产物
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: dist/草稿箱管理系统-Linux.tar.gz
  
  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: 下载所有构建产物
        uses: actions/download-artifact@v3
        
      - name: 创建发布
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows-build/草稿箱管理系统-Windows.zip
            macos-build/草稿箱管理系统-macOS.zip
            linux-build/草稿箱管理系统-Linux.tar.gz
          draft: true
          prerelease: false
          generate_release_notes: true 